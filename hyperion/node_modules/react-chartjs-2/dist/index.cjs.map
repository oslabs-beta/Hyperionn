{"version":3,"file":"index.cjs","sources":["../src/utils.ts","../src/chart.tsx","../src/typedCharts.tsx"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setOptions","chart","nextOptions","Object","assign","options","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","height","width","redraw","type","plugins","fallbackContent","updateMode","props","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","config","setTimeout","update","canvas","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController"],"mappings":"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"}